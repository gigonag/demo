DECLARE @WH_ID_MANUAL VARCHAR(40) = NULL;
DECLARE @TIMEZONE_MANUAL VARCHAR(40) = NULL;
DECLARE @USE_HRS_FILTER_FLG_MANUAL BIT = NULL;
DECLARE @HRS_PAST_MANUAL DECIMAL = NULL;
DECLARE @HRS_FUTURE_MANUAL DECIMAL = NULL;
DECLARE @PROD_SERVER_FLG BIT = CASE
  WHEN CHARINDEX('MINON', @@SERVERNAME, 1) > 0 THEN 0
  ELSE 1
END;
DECLARE @WH_ID VARCHAR(40) = COALESCE (
  @WH_ID_MANUAL,
  (
    SELECT
      STRING_AGG(CP.UC_PARAM_VAL, ',') WITHIN GROUP (
        ORDER BY
          CP.UC_PARAM_VAL ASC
      )
    FROM
      PRODWMS.UC_CUSTOM_PARAMETERS CP
    WHERE
      CP.UC_PARAM_NAM = 'AUTOCUT'
      AND CP.UC_PARAM_VAR = 'WH_ID'
  ),
  CASE
    WHEN @PROD_SERVER_FLG = 1 THEN CASE
      WHEN UPPER(
        RIGHT(
          LEFT(@@SERVERNAME, CHARINDEX('PROD', @@SERVERNAME, 1) -1),
          CHARINDEX('PROD', @@SERVERNAME, 1) -7
        )
      ) = 'DALLAS' THEN 'VZ'
      WHEN UPPER(
        RIGHT(
          LEFT(@@SERVERNAME, CHARINDEX('PROD', @@SERVERNAME, 1) -1),
          CHARINDEX('PROD', @@SERVERNAME, 1) -7
        )
      ) = 'DAYTON' THEN 'YV'
      WHEN UPPER(
        RIGHT(
          LEFT(@@SERVERNAME, CHARINDEX('PROD', @@SERVERNAME, 1) -1),
          CHARINDEX('PROD', @@SERVERNAME, 1) -7
        )
      ) = 'EDMC' THEN 'SL,SM,WI'
      WHEN UPPER(
        RIGHT(
          LEFT(@@SERVERNAME, CHARINDEX('PROD', @@SERVERNAME, 1) -1),
          CHARINDEX('PROD', @@SERVERNAME, 1) -7
        )
      ) = 'GCFC' THEN 'GV'
      WHEN UPPER(
        RIGHT(
          LEFT(@@SERVERNAME, CHARINDEX('PROD', @@SERVERNAME, 1) -1),
          CHARINDEX('PROD', @@SERVERNAME, 1) -7
        )
      ) = 'NEMC' THEN 'SB'
      WHEN UPPER(
        RIGHT(
          LEFT(@@SERVERNAME, CHARINDEX('PROD', @@SERVERNAME, 1) -1),
          CHARINDEX('PROD', @@SERVERNAME, 1) -7
        )
      ) = 'SEMC' THEN 'WF'
      WHEN UPPER(
        RIGHT(
          LEFT(@@SERVERNAME, CHARINDEX('PROD', @@SERVERNAME, 1) -1),
          CHARINDEX('PROD', @@SERVERNAME, 1) -7
        )
      ) = 'WCMC' THEN 'MV'
    END
    ELSE CASE
      WHEN UPPER(DB_NAME()) = 'DLMC' THEN 'VZ'
      WHEN UPPER(DB_NAME()) = 'DYMC' THEN 'YV'
      WHEN UPPER(DB_NAME()) = 'EDMC' THEN 'SL,SM,WI'
      WHEN UPPER(DB_NAME()) = 'GCFC' THEN 'GV'
      WHEN UPPER(DB_NAME()) = 'NEMC' THEN 'SB'
      WHEN UPPER(DB_NAME()) = 'SEMC' THEN 'WF'
      WHEN UPPER(DB_NAME()) = 'WCMC' THEN 'MV'
    END
  END
);
DECLARE @TIMEZONE VARCHAR(40) = COALESCE (
  @TIMEZONE_MANUAL,
  (
    SELECT
      UPPER(CP.UC_PARAM_VAL)
    FROM
      PRODWMS.UC_CUSTOM_PARAMETERS CP
    WHERE
      CP.UC_PARAM_NAM = 'AUTOCUT'
      AND CP.UC_PARAM_VAR = 'TIMEZONE'
  ),
  CASE
    WHEN @PROD_SERVER_FLG = 1 THEN CASE
      WHEN UPPER(
        RIGHT(
          LEFT(@@SERVERNAME, CHARINDEX('PROD', @@SERVERNAME, 1) -1),
          CHARINDEX('PROD', @@SERVERNAME, 1) -7
        )
      ) IN ('DAYTON', 'NEMC', 'SEMC') THEN 'EASTERN STANDARD TIME'
      WHEN UPPER(
        RIGHT(
          LEFT(@@SERVERNAME, CHARINDEX('PROD', @@SERVERNAME, 1) -1),
          CHARINDEX('PROD', @@SERVERNAME, 1) -7
        )
      ) IN ('DALLAS', 'EDMC', 'GCFC') THEN 'CENTRAL STANDARD TIME'
      WHEN UPPER(
        RIGHT(
          LEFT(@@SERVERNAME, CHARINDEX('PROD', @@SERVERNAME, 1) -1),
          CHARINDEX('PROD', @@SERVERNAME, 1) -7
        )
      ) = 'WCMC' THEN 'PACIFIC STANDARD TIME'
      ELSE 'UTC'
    END
    ELSE CASE
      WHEN UPPER(DB_NAME()) IN ('DYMC', 'NEMC', 'SEMC') THEN 'EASTERN STANDARD TIME'
      WHEN UPPER(DB_NAME()) IN ('DLMC', 'EDMC', 'GCFC') THEN 'CENTRAL STANDARD TIME'
      WHEN UPPER(DB_NAME()) = 'WCMC' THEN 'PACIFIC STANDARD TIME'
      ELSE 'UTC'
    END
  END
);
DECLARE @USE_HRS_FILTER_FLG BIT = COALESCE (
  @USE_HRS_FILTER_FLG_MANUAL,
  CASE
    WHEN CHARINDEX('MINON', @@SERVERNAME, 1) > 0 THEN 0
    ELSE 1
  END
);
DECLARE @HRS_PAST DECIMAL = COALESCE (
  @HRS_PAST_MANUAL,
  (
    SELECT
      CP.UC_PARAM_VAL
    FROM
      PRODWMS.UC_CUSTOM_PARAMETERS CP
    WHERE
      CP.UC_PARAM_NAM = 'AUTOCUT'
      AND CP.UC_PARAM_VAR = 'PAST_TIME'
  ),
  -36
);
DECLARE @HRS_FUTURE DECIMAL = COALESCE (
  @HRS_FUTURE_MANUAL,
  (
    SELECT
      CP.UC_PARAM_VAL
    FROM
      PRODWMS.UC_CUSTOM_PARAMETERS CP
    WHERE
      CP.UC_PARAM_NAM = 'AUTOCUT'
      AND CP.UC_PARAM_VAR = 'FUTURE_TIME'
  ),
  36
);
DECLARE @GETDATE DATETIME2 = CONVERT(
  DATETIME,
  SWITCHOFFSET(
    GETDATE() AT TIME ZONE 'UTC',
    RIGHT(GETDATE() AT TIME ZONE 'UTC' AT TIME ZONE @TIMEZONE, 6)
  )
);
IF OBJECT_ID('TEMPDB..#WH_ID') IS NOT NULL DROP TABLE #WH_ID IF OBJECT_ID('TEMPDB..#EARLY_LATE') IS NOT NULL DROP TABLE #EARLY_LATE IF OBJECT_ID('TEMPDB..#PRTFTP') IS NOT NULL DROP TABLE #PRTFTP IF OBJECT_ID('TEMPDB..#SHORTS') IS NOT NULL DROP TABLE #SHORTS IF OBJECT_ID('TEMPDB..#SHORT_PARTS') IS NOT NULL DROP TABLE #SHORT_PARTS IF OBJECT_ID('TEMPDB..#SHORT_CM') IS NOT NULL DROP TABLE #SHORT_CM IF OBJECT_ID('TEMPDB..#SHORT_ORDERS') IS NOT NULL DROP TABLE #SHORT_ORDERS IF OBJECT_ID('TEMPDB..#SHORT_SHIP') IS NOT NULL DROP TABLE #SHORT_SHIP IF OBJECT_ID('TEMPDB..#WRKQUE') IS NOT NULL DROP TABLE #WRKQUE IF OBJECT_ID('TEMPDB..#PCKWRK') IS NOT NULL DROP TABLE #PCKWRK IF OBJECT_ID('TEMPDB..#WRKSTS') IS NOT NULL DROP TABLE #WRKSTS IF OBJECT_ID('TEMPDB..#SHPDST') IS NOT NULL DROP TABLE #SHPDST IF OBJECT_ID('TEMPDB..#TRAILER_PALLETS') IS NOT NULL DROP TABLE #TRAILER_PALLETS IF OBJECT_ID('TEMPDB..#SHORT_SUM') IS NOT NULL DROP TABLE #SHORT_SUM CREATE TABLE #WH_ID (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS UNIQUE CLUSTERED
);
CREATE TABLE #EARLY_LATE (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS UNIQUE CLUSTERED,
  EARLY_OR_LATE VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
);
CREATE TABLE #PRTFTP (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  PRTNUM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  PRT_CLIENT_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  UNTCAS DECIMAL(18, 2),
  UNTINP DECIMAL(18, 2),
  UNTPAL DECIMAL(18, 2),
  INPUOM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  DEF_ASSET_TYP VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  UNTVOL DECIMAL(18, 2),
  UNTWGT DECIMAL(18, 2),
  INDEX IX UNIQUE CLUSTERED (WH_ID, PRTNUM, PRT_CLIENT_ID)
);
CREATE TABLE #SHORTS (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  PRTNUM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  ITM_DSC VARCHAR(80) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  CAR_MOVE_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  SHIP_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  SHIP_LINE_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  SHPSTS VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  SHPDTE DATETIME,
  ORDNUM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  ORDLIN VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  ORDQTY DECIMAL(18, 2),
  SHORTQTY DECIMAL(18, 2),
  LIVE_FLG BIT,
  CARRIER VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  TRLR_NUM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  CUSTOMER VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  UNTCAS DECIMAL(18, 2),
  UNTINP DECIMAL(18, 2),
  UNTPAL DECIMAL(18, 2),
  INPUOM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  UNTVOL DECIMAL(18, 2),
  UNTWGT DECIMAL(18, 2),
  ALLOC_STS VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  CS_PER_PL DECIMAL(18, 2),
  LY_PER_PL DECIMAL(18, 2),
  CS_PER_LY DECIMAL(18, 2),
  ORDQTY_CS DECIMAL(18, 2),
  ORDQTY_LY DECIMAL(18, 2),
  ORDQTY_PL DECIMAL(18, 2),
  SHORTQTY_CS DECIMAL(18, 2),
  SHORTQTY_LY DECIMAL(18, 2),
  SHORTQTY_PL DECIMAL(18, 2),
  INDEX IX UNIQUE CLUSTERED (WH_ID, PRTNUM, ORDNUM, ORDLIN, CAR_MOVE_ID, SHIP_ID)
);
CREATE TABLE #SHORT_PARTS (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  PRTNUM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  INDEX IX UNIQUE CLUSTERED (WH_ID, PRTNUM)
);
CREATE TABLE #SHORT_CM (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  CAR_MOVE_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  INDEX IX UNIQUE CLUSTERED (WH_ID, CAR_MOVE_ID)
);
CREATE TABLE #SHORT_ORDERS (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  ORDNUM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  INDEX IX UNIQUE CLUSTERED (WH_ID, ORDNUM)
);
CREATE TABLE #SHORT_SHIP (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  SHIP_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  INDEX IX UNIQUE CLUSTERED (WH_ID, SHIP_ID)
);
CREATE TABLE #WRKQUE (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  WRKREF VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  LIST_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  WRKSTS VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  INDEX IX UNIQUE CLUSTERED (WH_ID, WRKREF, LIST_ID)
);
CREATE TABLE #PCKWRK (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  ORDNUM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  ORDLIN VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  SHIP_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  SHIP_LINE_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  PRTNUM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  PRT_CLIENT_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  PCKQTY DECIMAL(18, 2),
  APPQTY DECIMAL(18, 2),
  LODLVL VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  WRKREF VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  LIST_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  SRCLOC VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  WRKSTS VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  INDEX IX UNIQUE CLUSTERED (
    WH_ID,
    ORDNUM,
    ORDLIN,
    SHIP_ID,
    SHIP_LINE_ID,
    PRTNUM,
    WRKREF,
    LIST_ID
  )
);
CREATE TABLE #WRKSTS (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  ORDNUM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  ORDLIN VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  WRKSTS VARCHAR(MAX),
  INDEX IX UNIQUE CLUSTERED (WH_ID, ORDNUM, ORDLIN)
);
CREATE TABLE #SHPDST (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  SHIP_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  DSTARE VARCHAR(MAX),
  DSTLOC VARCHAR(MAX)
);
CREATE TABLE #TRAILER_PALLETS (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  CAR_MOVE_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  TOTAL_PLTS DECIMAL(18, 2),
  TOTAL_VOL DECIMAL(18, 2),
  TOTAL_WGT DECIMAL(18, 2),
  INDEX IX UNIQUE CLUSTERED (WH_ID, CAR_MOVE_ID)
);
CREATE TABLE #SHORT_SUM (
  WH_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  PRTNUM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  CAR_MOVE_ID VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  ORDNUM VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  ORDLIN VARCHAR(40) COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,
  SHORTQTY DECIMAL(18, 2),
  SHORT_UN_SUM DECIMAL(18, 2),
  SHORT_CS_SUM DECIMAL(18, 2),
  SHORT_LY_SUM DECIMAL(18, 2),
  SHORT_PL_SUM DECIMAL(18, 2),
  INDEX IX UNIQUE CLUSTERED (
    WH_ID,
    PRTNUM,
    CAR_MOVE_ID,
    ORDNUM,
    ORDLIN,
    SHORT_UN_SUM,
    SHORT_CS_SUM,
    SHORT_LY_SUM,
    SHORT_PL_SUM
  )
);
INSERT INTO
  #WH_ID(WH_ID) (
    SELECT
      DISTINCT UPPER(VALUE) AS WH_ID
    FROM
      STRING_SPLIT(REPLACE(@WH_ID, ' ', ''), ',')
  );
INSERT INTO
  #EARLY_LATE(WH_ID, EARLY_OR_LATE) (
    SELECT
      CUSTPARAM.WH_ID,
      CUSTPARAM.UC_PARAM_VAL EARLY_OR_LATE
    FROM
      PRODWMS.UC_CUSTOM_PARAMETERS CUSTPARAM
    WHERE
      CUSTPARAM.UC_PARAM_VAR = 'EARLY-OR-LATE-SHIP-DATE'
      AND EXISTS(
        SELECT
          'X'
        FROM
          #WH_ID W
        WHERE
          W.WH_ID = CUSTPARAM.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
      )
  );
INSERT INTO
  #PRTFTP(
    WH_ID,
    PRTNUM,
    PRT_CLIENT_ID,
    UNTCAS,
    UNTINP,
    UNTPAL,
    INPUOM,
    DEF_ASSET_TYP,
    UNTVOL,
    UNTWGT
  ) (
    SELECT
      PRTFTP.WH_ID,
      CASE
        WHEN PRTFTP.CNT > 1 THEN CASE
          WHEN PRTFTP.FTPCOD = 'U1' THEN PRTFTP.PRTNUM
          ELSE NULL
        END
        ELSE PRTFTP.PRTNUM
      END AS PRTNUM,
      PRTFTP.PRT_CLIENT_ID,
      PRTFTP.UNTCAS,
      PRTFTP.UNTINP,
      PRTFTP.UNTPAL,
      PRTFTP.INPUOM,
      PRTFTP.DEF_ASSET_TYP,
      PRTFTP.UNTVOL,
      PRTFTP.UNTWGT
    FROM
      (
        SELECT
          PFV.WH_ID,
          PFV.PRTNUM,
          PFV.PRT_CLIENT_ID,
          ISNULL(PFV.UNTCAS, 0) AS UNTCAS,
          ISNULL(PFV.UNTINP, 0) AS UNTINP,
          ISNULL(PFV.UNTPAL, 0) AS UNTPAL,
          PFV.FTPCOD,
          PFV.INPUOM,
          PFV.DEF_ASSET_TYP,
          (PFV.UNTLEN * PFV.UNTWID * PFV.UNTHGT) AS UNTVOL,
          PFV.UNTGRSWGT AS UNTWGT,
          COUNT(PFV.PRTNUM) OVER(
            PARTITION BY PFV.WH_ID,
            PFV.PRTNUM,
            PFV.PRT_CLIENT_ID
          ) AS CNT
        FROM
          (
            SELECT
              P.PRTNUM,
              P.PRT_CLIENT_ID,
              P.WH_ID,
              P.FTPCOD,
              ISNULL(PD1.UNTQTY, 0) UNTPAL,
              ISNULL(PD3.UNTQTY, 0) UNTCAS,
              ISNULL(PD2.UNTQTY, 0) UNTINP,
              PD1.UOMCOD PALUOM,
              PD3.UOMCOD CASUOM,
              PD5.UOMCOD RCVUOM,
              PD2.UOMCOD INPUOM,
              ISNULL(PD3.GRSWGT, 0) GRSWGT,
              ISNULL(PD3.NETWGT, 0) NETWGT,
              ISNULL(PD1.GRSWGT, 0) PALGRSWGT,
              ISNULL(PD1.NETWGT, 0) PALNETWGT,
              ISNULL(PD3.GRSWGT, 0) CASGRSWGT,
              ISNULL(PD3.NETWGT, 0) CASNETWGT,
              ISNULL(PD4.GRSWGT, 0) UNTGRSWGT,
              ISNULL(PD4.NETWGT, 0) UNTNETWGT,
              ISNULL(PD2.GRSWGT, 0) INPGRSWGT,
              ISNULL(PD2.NETWGT, 0) INPNETWGT,
              ISNULL(PD1.LEN, 0) PALLEN,
              ISNULL(PD1.WID, 0) PALWID,
              ISNULL(PD1.HGT, 0) PALHGT,
              ISNULL(PD3.LEN, 0) CASLEN,
              ISNULL(PD3.WID, 0) CASWID,
              ISNULL(PD3.HGT, 0) CASHGT,
              ISNULL(PD4.LEN, 0) UNTLEN,
              ISNULL(PD4.WID, 0) UNTWID,
              ISNULL(PD4.HGT, 0) UNTHGT,
              ISNULL(PD2.LEN, 0) INPLEN,
              ISNULL(PD2.WID, 0) INPWID,
              ISNULL(PD2.HGT, 0) INPHGT,
              P.NSTLEN,
              P.NSTWID,
              P.NSTHGT,
              P.DEF_ASSET_TYP,
              P.CASLVL,
              P.PAL_STCK_HGT,
              P.DEFFTP_FLG,
              P.STKMTD
            FROM
              PRODWMS.PRTFTP P
              INNER JOIN PRODWMS.PRTFTP_DTL PD1 ON (P.PRTNUM = PD1.PRTNUM)
              AND (P.PRT_CLIENT_ID = PD1.PRT_CLIENT_ID)
              AND (P.WH_ID = PD1.WH_ID)
              AND (P.FTPCOD = PD1.FTPCOD)
              AND (PD1.PAL_FLG = 1)
              LEFT JOIN PRODWMS.PRTFTP_DTL PD2 ON (P.PRTNUM = PD2.PRTNUM)
              AND (P.PRT_CLIENT_ID = PD2.PRT_CLIENT_ID)
              AND (P.WH_ID = PD2.WH_ID)
              AND (P.FTPCOD = PD2.FTPCOD)
              AND (PD2.VC_LAY_FLG = 1)
              LEFT JOIN PRODWMS.PRTFTP_DTL PD3 ON (P.PRTNUM = PD3.PRTNUM)
              AND (P.PRT_CLIENT_ID = PD3.PRT_CLIENT_ID)
              AND (P.WH_ID = PD3.WH_ID)
              AND (P.FTPCOD = PD3.FTPCOD)
              AND (PD3.CAS_FLG = 1)
              INNER JOIN (
                SELECT
                  PD.PRTNUM,
                  PD.FTPCOD,
                  PD.PRT_CLIENT_ID,
                  PD.WH_ID,
                  PD.UOMCOD,
                  PD.UOMLVL,
                  PD.LEN,
                  PD.WID,
                  PD.HGT,
                  PD.GRSWGT,
                  PD.NETWGT,
                  PD.UNTQTY,
                  ROW_NUMBER() OVER(
                    PARTITION BY PD.PRTNUM,
                    PD.FTPCOD,
                    PD.PRT_CLIENT_ID,
                    PD.WH_ID
                    ORDER BY
                      PD.UOMLVL ASC
                  ) AS RN
                FROM
                  PRODWMS.PRTFTP_DTL PD
                WHERE
                  PD.STK_FLG = 1
              ) AS PD4 ON (P.PRTNUM = PD4.PRTNUM)
              AND (P.PRT_CLIENT_ID = PD4.PRT_CLIENT_ID)
              AND (P.WH_ID = PD4.WH_ID)
              AND (P.FTPCOD = PD4.FTPCOD)
              AND (PD4.RN = 1)
              LEFT JOIN PRODWMS.PRTFTP_DTL PD5 ON (P.PRTNUM = PD5.PRTNUM)
              AND (P.PRT_CLIENT_ID = PD5.PRT_CLIENT_ID)
              AND (P.WH_ID = PD5.WH_ID)
              AND (P.FTPCOD = PD5.FTPCOD)
              AND (PD5.RCV_FLG = 1)
          ) AS PFV
        WHERE
          EXISTS(
            SELECT
              'X'
            FROM
              #WH_ID W
            WHERE
              W.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS = PFV.WH_ID
          )
      ) AS PRTFTP
    WHERE
      (
        CASE
          WHEN PRTFTP.CNT > 1 THEN CASE
            WHEN PRTFTP.FTPCOD = 'U1' THEN PRTFTP.PRTNUM
            ELSE NULL
          END
          ELSE PRTFTP.PRTNUM
        END
      ) IS NOT NULL
  );
INSERT INTO
  #SHORTS(
    WH_ID,
    PRTNUM,
    ITM_DSC,
    CAR_MOVE_ID,
    SHIP_ID,
    SHIP_LINE_ID,
    SHPSTS,
    SHPDTE,
    ORDNUM,
    ORDLIN,
    ORDQTY,
    SHORTQTY,
    LIVE_FLG,
    CARRIER,
    TRLR_NUM,
    CUSTOMER,
    UNTCAS,
    UNTINP,
    UNTPAL,
    INPUOM,
    UNTVOL,
    UNTWGT,
    ALLOC_STS,
    CS_PER_PL,
    LY_PER_PL,
    CS_PER_LY,
    ORDQTY_CS,
    ORDQTY_LY,
    ORDQTY_PL,
    SHORTQTY_CS,
    SHORTQTY_LY,
    SHORTQTY_PL
  ) (
    SELECT
      O.WH_ID,
      OL.PRTNUM,
      PRTDSC.LNGDSC AS ITM_DSC,
      CM.CAR_MOVE_ID,
      SL.SHIP_ID,
      SL.SHIP_LINE_ID,
      S.SHPSTS,
      CASE
        WHEN EL.EARLY_OR_LATE = 'EARLY' THEN S.EARLY_SHPDTE
        WHEN EL.EARLY_OR_LATE = 'LATE' THEN S.LATE_SHPDTE
        ELSE S.EARLY_SHPDTE
      END AS SHPDTE,
      OL.ORDNUM,
      OL.ORDLIN,
      SUM(OL.ORDQTY) AS ORDQTY,
      SUM(SL.PCKQTY) AS SHORTQTY,
      MAX(CM.VC_LIVE_LOAD_FLG) AS LIVE_FLG,
      ISNULL(MIN(CARHDR.CARNAM), TRLR.CARCOD) AS CARRIER,
      TRLR.TRLR_NUM,
      MAX(CUST.ADRNAM) AS CUSTOMER,
      PFTPV.UNTCAS,
      PFTPV.UNTINP,
      PFTPV.UNTPAL,
      PFTPV.INPUOM,
      PFTPV.UNTVOL,
      PFTPV.UNTWGT,
      CASE
        WHEN (SL.SHPQTY + SL.STGQTY + SL.INPQTY) = 0 THEN 'U'
        ELSE 'A'
      END AS ALLOC_STS,
      CASE
        WHEN PFTPV.UNTCAS > 0 THEN (PFTPV.UNTPAL / PFTPV.UNTCAS)
        ELSE 0
      END AS CS_PER_PL,
      CASE
        WHEN (
          CASE
            WHEN PFTPV.INPUOM IS NULL THEN PFTPV.UNTPAL
            ELSE PFTPV.UNTINP
          END
        ) > 0 THEN (
          PFTPV.UNTPAL / (
            CASE
              WHEN PFTPV.INPUOM IS NULL THEN PFTPV.UNTPAL
              ELSE PFTPV.UNTINP
            END
          )
        )
        ELSE 0
      END AS LY_PER_PL,
      CASE
        WHEN PFTPV.UNTCAS > 0 THEN (PFTPV.UNTINP / PFTPV.UNTCAS)
        ELSE 0
      END AS CS_PER_LY,
      CASE
        WHEN PFTPV.UNTCAS > 0 THEN (CONVERT(DECIMAL, SUM(OL.ORDQTY)) / PFTPV.UNTCAS)
        ELSE 0
      END AS ORDQTY_CS,
      CASE
        WHEN PFTPV.UNTINP > 0 THEN (CONVERT(DECIMAL, SUM(OL.ORDQTY)) / PFTPV.UNTINP)
        ELSE 0
      END AS ORDQTY_LY,
      CASE
        WHEN PFTPV.UNTPAL > 0 THEN (CONVERT(DECIMAL, SUM(OL.ORDQTY)) / PFTPV.UNTPAL)
        ELSE 0
      END AS ORDQTY_PL,
      CASE
        WHEN PFTPV.UNTCAS > 0 THEN (CONVERT(DECIMAL, SUM(SL.PCKQTY)) / PFTPV.UNTCAS)
        ELSE 0
      END AS SHORTQTY_CS,
      CASE
        WHEN PFTPV.UNTINP > 0 THEN (CONVERT(DECIMAL, SUM(SL.PCKQTY)) / PFTPV.UNTINP)
        ELSE 0
      END AS SHORTQTY_LY,
      CASE
        WHEN PFTPV.UNTPAL > 0 THEN (CONVERT(DECIMAL, SUM(SL.PCKQTY)) / PFTPV.UNTPAL)
        ELSE 0
      END AS SHORTQTY_PL
    FROM
      PRODWMS.ORD O
      LEFT JOIN #EARLY_LATE EL ON O.WH_ID = EL.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
      INNER JOIN PRODWMS.ORD_LINE OL ON O.ORDNUM = OL.ORDNUM
      AND O.WH_ID = OL.WH_ID
      AND O.CLIENT_ID = OL.CLIENT_ID
      AND OL.NON_ALC_FLG != 1
      AND NOT EXISTS(
        SELECT
          'X'
        FROM
          PRODWMS.ASSET_TYP
        WHERE
          OL.PRTNUM = ASSET_TYP.PRTNUM
      )
      AND (
        (
          @USE_HRS_FILTER_FLG = 1
          AND (
            CASE
              WHEN EL.EARLY_OR_LATE = 'EARLY' THEN OL.EARLY_SHPDTE
              WHEN EL.EARLY_OR_LATE = 'LATE' THEN OL.LATE_SHPDTE
              ELSE OL.EARLY_SHPDTE
            END BETWEEN DATEADD(HOUR, @HRS_PAST, @GETDATE)
            AND DATEADD(HOUR, @HRS_FUTURE, @GETDATE)
          )
        )
        OR @USE_HRS_FILTER_FLG = 0
      )
      INNER JOIN PRODWMS.SHIPMENT_LINE SL ON OL.ORDNUM = SL.ORDNUM
      AND OL.ORDLIN = SL.ORDLIN
      AND OL.ORDSLN = SL.ORDSLN
      AND OL.CLIENT_ID = SL.CLIENT_ID
      AND OL.WH_ID = SL.WH_ID
      AND SL.PCKQTY > 0
      INNER JOIN PRODWMS.SHIPMENT S ON SL.SHIP_ID = S.SHIP_ID
      AND SL.WH_ID = S.WH_ID
      AND S.SHPSTS IN ('I', 'L', 'R')
      INNER JOIN PRODWMS.STOP ON S.STOP_ID = STOP.STOP_ID
      INNER JOIN PRODWMS.CAR_MOVE CM ON STOP.CAR_MOVE_ID = CM.CAR_MOVE_ID
      AND S.WH_ID = CM.WH_ID
      LEFT JOIN PRODWMS.TRLR ON CM.TRLR_ID = TRLR.TRLR_ID
      AND CM.WH_ID = TRLR.STOLOC_WH_ID
      LEFT JOIN PRODWMS.CARHDR ON S.CARCOD = CARHDR.CARCOD
      LEFT JOIN PRODWMS.PRTDSC ON (
        PRTDSC.COLVAL = (OL.PRTNUM + '|' + OL.PRT_CLIENT_ID + '|' + OL.WH_ID)
      )
      AND PRTDSC.COLNAM = 'prtnum|prt_client_id|wh_id_tmpl'
      AND PRTDSC.LOCALE_ID = 'US_ENGLISH'
      LEFT JOIN PRODWMS.ADRMST CUST ON COALESCE(OL.ST_ADR_ID, O.ST_ADR_ID) = CUST.ADR_ID
      INNER JOIN #PRTFTP PFTPV ON OL.PRTNUM = PFTPV.PRTNUM COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
      AND O.WH_ID = PFTPV.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
    WHERE
      EXISTS(
        SELECT
          'X'
        FROM
          #WH_ID W
        WHERE
          W.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS = O.WH_ID
      )
    GROUP BY
      O.WH_ID,
      OL.PRTNUM,
      PRTDSC.LNGDSC,
      CM.CAR_MOVE_ID,
      SL.SHIP_ID,
      SL.SHIP_LINE_ID,
      S.SHPSTS,
      OL.ORDNUM,
      OL.ORDLIN,
      TRLR.CARCOD,
      TRLR.TRLR_NUM,
      S.EARLY_SHPDTE,
      S.LATE_SHPDTE,
      EL.EARLY_OR_LATE,
      PFTPV.UNTCAS,
      PFTPV.UNTINP,
      PFTPV.UNTPAL,
      PFTPV.INPUOM,
      PFTPV.UNTVOL,
      PFTPV.UNTWGT,
      CASE
        WHEN (SL.SHPQTY + SL.STGQTY + SL.INPQTY) = 0 THEN 'U'
        ELSE 'A'
      END
  );
INSERT INTO
  #SHORT_PARTS(WH_ID, PRTNUM) (
    SELECT
      DISTINCT S.WH_ID,
      S.PRTNUM
    FROM
      #SHORTS S
  );
INSERT INTO
  #SHORT_CM(WH_ID, CAR_MOVE_ID) (
    SELECT
      DISTINCT S.WH_ID,
      S.CAR_MOVE_ID
    FROM
      #SHORTS S
  );
INSERT INTO
  #SHORT_ORDERS(WH_ID, ORDNUM) (
    SELECT
      DISTINCT S.WH_ID,
      S.ORDNUM
    FROM
      #SHORTS S
  );
INSERT INTO
  #SHORT_SHIP(WH_ID, SHIP_ID) (
    SELECT
      DISTINCT S.WH_ID,
      S.SHIP_ID
    FROM
      #SHORTS S
  );
INSERT INTO
  #WRKQUE (WH_ID, WRKREF, LIST_ID, WRKSTS) (
    SELECT
      DISTINCT WQ.WH_ID,
      WQ.WRKREF,
      WQ.LIST_ID,
      WQ.WRKSTS
    FROM
      PRODWMS.WRKQUE WQ
    WHERE
      (
        CASE
          WHEN WQ.WRKREF IS NULL THEN WQ.LIST_ID
          WHEN WQ.LIST_ID IS NULL THEN WQ.WRKREF
        END
      ) IS NOT NULL
      AND WQ.OPRCOD LIKE '%PCK'
  );
INSERT INTO
  #PCKWRK(
    WH_ID,
    ORDNUM,
    ORDLIN,
    SHIP_ID,
    SHIP_LINE_ID,
    PRTNUM,
    PRT_CLIENT_ID,
    PCKQTY,
    APPQTY,
    LODLVL,
    WRKREF,
    LIST_ID,
    SRCLOC,
    WRKSTS
  ) (
    SELECT
      PWV.WH_ID,
      PWV.ORDNUM,
      PWV.ORDLIN,
      PWV.SHIP_ID,
      PWV.SHIP_LINE_ID,
      PWV.PRTNUM,
      PWV.PRT_CLIENT_ID,
      SUM(PWV.PCKQTY) AS PCKQTY,
      SUM(PWV.APPQTY) AS APPQTY,
      PWV.LODLVL,
      PWV.WRKREF,
      PWV.LIST_ID,
      PWV.SRCLOC,
      CASE
        WHEN WQ1.WRKSTS IS NULL THEN WQ2.WRKSTS
        ELSE WQ1.WRKSTS
      END AS WRKSTS
    FROM
      PRODWMS.PCKWRK_VIEW PWV
      LEFT JOIN #WRKQUE WQ1 ON PWV.WH_ID = WQ1.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
      AND PWV.WRKREF = WQ1.WRKREF COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
      LEFT JOIN #WRKQUE WQ2 ON PWV.WH_ID = WQ2.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
      AND PWV.LIST_ID = WQ2.LIST_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
    WHERE
      PWV.SHIP_ID IS NOT NULL
      AND EXISTS (
        SELECT
          'X'
        FROM
          #SHORT_PARTS SP
        WHERE
          PWV.PRTNUM = SP.PRTNUM COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
      )
      AND EXISTS(
        SELECT
          'X'
        FROM
          #WH_ID W
        WHERE
          W.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS = PWV.WH_ID
      )
      AND PWV.PCKSTS != 'C'
    GROUP BY
      PWV.WH_ID,
      PWV.ORDNUM,
      PWV.ORDLIN,
      PWV.SHIP_ID,
      PWV.SHIP_LINE_ID,
      PWV.PRTNUM,
      PWV.PRT_CLIENT_ID,
      PWV.LODLVL,
      PWV.WRKREF,
      PWV.LIST_ID,
      PWV.SRCLOC,
      CASE
        WHEN WQ1.WRKSTS IS NULL THEN WQ2.WRKSTS
        ELSE WQ1.WRKSTS
      END
  );
INSERT INTO
  #WRKSTS(WH_ID, ORDNUM, ORDLIN, WRKSTS) (
    SELECT
      T1.WH_ID,
      T1.ORDNUM,
      T1.ORDLIN,
      STRING_AGG(T1.WRKSTS, ', ') WITHIN GROUP (
        ORDER BY
          T1.WRKSTS ASC
      ) AS WRKSTS
    FROM
      (
        SELECT
          PW.WH_ID,
          PW.ORDNUM,
          PW.ORDLIN,
          PW.WRKSTS
        FROM
          #PCKWRK PW
        WHERE
          PW.WRKSTS IS NOT NULL
        GROUP BY
          PW.WH_ID,
          PW.ORDNUM,
          PW.ORDLIN,
          PW.WRKSTS
      ) AS T1
    GROUP BY
      T1.WH_ID,
      T1.ORDNUM,
      T1.ORDLIN
  );
INSERT INTO
  #SHPDST(WH_ID, SHIP_ID, DSTARE, DSTLOC) (
    SELECT
      DL.WH_ID,
      DL.SHIP_ID,
      STRING_AGG(DL.DSTARE, ', ') WITHIN GROUP (
        ORDER BY
          DL.DSTARE ASC,
          DL.DSTLOC ASC
      ) AS DSTARE,
      STRING_AGG(DL.DSTLOC, ', ') WITHIN GROUP (
        ORDER BY
          DL.DSTARE ASC,
          DL.DSTLOC ASC
      ) AS DSTLOC
    FROM
      (
        SELECT
          SDL.WH_ID,
          SDL.SHIP_ID,
          SDL.DSTARE,
          SDL.DSTLOC
        FROM
          PRODWMS.SHP_DST_LOC SDL
      ) AS DL
    WHERE
      EXISTS (
        SELECT
          'X'
        FROM
          #SHORT_SHIP SS
        WHERE
          DL.WH_ID = SS.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
          AND DL.SHIP_ID = SS.SHIP_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
      )
    GROUP BY
      DL.WH_ID,
      DL.SHIP_ID
  );
INSERT INTO
  #TRAILER_PALLETS(WH_ID, CAR_MOVE_ID, TOTAL_PLTS, TOTAL_VOL, TOTAL_WGT) (
    SELECT
      SCM.WH_ID,
      SCM.CAR_MOVE_ID,
      CEILING(SUM(CONVERT(DECIMAL, OL.HOST_ORDQTY) / PFV.UNTPAL)) AS TOTAL_PLTS,
      CEILING(SUM(PFV.UNTVOL * OL.HOST_ORDQTY)) AS TOTAL_VOL,
      CEILING(SUM(PFV.UNTWGT * OL.HOST_ORDQTY)) AS TOTAL_WGT
    FROM
      #SHORT_CM SCM
      INNER JOIN PRODWMS.ORD O ON SCM.CAR_MOVE_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS = O.VC_CAR_MOVE_ID
      AND SCM.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS = O.WH_ID
      AND EXISTS (
        SELECT
          'X'
        FROM
          #SHORT_ORDERS SO
        WHERE
          O.ORDNUM = SO.ORDNUM COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
          AND O.WH_ID = SO.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
      )
      INNER JOIN PRODWMS.ORD_LINE OL ON O.ORDNUM = OL.ORDNUM
      AND O.WH_ID = OL.WH_ID
      INNER JOIN #PRTFTP PFV ON OL.PRTNUM = PFV.PRTNUM COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
      AND OL.WH_ID = PFV.WH_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
      AND OL.PRT_CLIENT_ID = PFV.PRT_CLIENT_ID COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS
    GROUP BY
      SCM.WH_ID,
      SCM.CAR_MOVE_ID
  );
INSERT INTO
  #SHORT_SUM(
    WH_ID,
    PRTNUM,
    CAR_MOVE_ID,
    ORDNUM,
    ORDLIN,
    SHORTQTY,
    SHORT_UN_SUM,
    SHORT_CS_SUM,
    SHORT_LY_SUM,
    SHORT_PL_SUM
  ) (
    SELECT
      ST1.WH_ID,
      ST1.PRTNUM,
      ST1.CAR_MOVE_ID,
      ST1.ORDNUM,
      ST1.ORDLIN,
      ST1.SHORTQTY,
      CASE
        WHEN ISNULL(ST1.UNTCAS, 0) > 1 THEN CASE
          WHEN (
            (
              (
                (
                  (ST1.SHORTQTY - (ST1.SHORT_PL_SUM * ST1.UNTPAL)) % (
                    CASE
                      WHEN ISNULL(ST1.UNTINP, 0) > 0 THEN ST1.UNTINP
                      ELSE 1
                    END
                  ) / (
                    CASE
                      WHEN ISNULL(ST1.UNTINP, 0) > 0 THEN ST1.UNTINP
                      ELSE 1
                    END
                  )
                ) * ST1.UNTINP
              ) / ST1.UNTCAS
            ) - ROUND(
              (
                (
                  (
                    (ST1.SHORTQTY - (ST1.SHORT_PL_SUM * ST1.UNTPAL)) % (
                      CASE
                        WHEN ISNULL(ST1.UNTINP, 0) > 0 THEN ST1.UNTINP
                        ELSE 1
                      END
                    ) / (
                      CASE
                        WHEN ISNULL(ST1.UNTINP, 0) > 0 THEN ST1.UNTINP
                        ELSE 1
                      END
                    )
                  ) * ST1.UNTINP
                ) / ST1.UNTCAS
              ),
              0
            )
          ) > 0 THEN (
            (
              (
                (
                  (ST1.SHORTQTY - (ST1.SHORT_PL_SUM * ST1.UNTPAL)) % (
                    CASE
                      WHEN ISNULL(ST1.UNTINP, 0) > 0 THEN ST1.UNTINP
                      ELSE 1
                    END
                  ) / (
                    CASE
                      WHEN ISNULL(ST1.UNTINP, 0) > 0 THEN ST1.UNTINP
                      ELSE 1
                    END
                  )
                ) * ST1.UNTINP
              ) / ST1.UNTCAS
            ) - ROUND(
              (
                (
                  (
                    (ST1.SHORTQTY - (ST1.SHORT_PL_SUM * ST1.UNTPAL)) % (
                      CASE
                        WHEN ISNULL(ST1.UNTINP, 0) > 0 THEN ST1.UNTINP
                        ELSE 1
                      END
                    ) / (
                      CASE
                        WHEN ISNULL(ST1.UNTINP, 0) > 0 THEN ST1.UNTINP
                        ELSE 1
                      END
                    )
                  ) * ST1.UNTINP
                ) / ST1.UNTCAS
              ),
              0
            )
          ) * ST1.UNTCAS
          ELSE 0
        END
        ELSE 0
      END AS SHORT_UN_SUM,
      CASE
        WHEN ISNULL(ST1.UNTCAS, 0) > 0 THEN ROUND(
          (
            (
              (
                (ST1.SHORTQTY - (ST1.SHORT_PL_SUM * ST1.UNTPAL)) % (
                  CASE
                    WHEN ISNULL(ST1.UNTINP, 0) > 0 THEN ST1.UNTINP
                    ELSE 1
                  END
                ) / (
                  CASE
                    WHEN ISNULL(ST1.UNTINP, 0) > 0 THEN ST1.UNTINP
                    ELSE 1
                  END
                )
              ) * ST1.UNTINP
            ) / ST1.UNTCAS
          ),
          0
        )
        ELSE 0
      END AS SHORT_CS_SUM,
      CASE
        WHEN ISNULL(ST1.UNTINP, 0) > 0 THEN ROUND(
          (
            (ST1.SHORTQTY - (ST1.SHORT_PL_SUM * ST1.UNTPAL)) / ST1.UNTINP
          ) - (
            (
              (ST1.SHORTQTY - (ST1.SHORT_PL_SUM * ST1.UNTPAL)) % ST1.UNTINP
            ) / ST1.UNTINP
          ),
          0
        )
        ELSE 0
      END AS SHORT_LY_SUM,
      ST1.SHORT_PL_SUM
    FROM
      (
        SELECT
          SR.WH_ID,
          SR.PRTNUM,
          SR.CAR_MOVE_ID,
          SR.ORDNUM,
          SR.ORDLIN,
          SR.SHORTQTY,
          SR.UNTCAS,
          SR.UNTINP,
          SR.UNTPAL,
          CASE
            WHEN ISNULL(SR.UNTPAL, 0) > 0 THEN ROUND(
              (
                (SR.SHORTQTY / SR.UNTPAL) - ((SR.SHORTQTY % SR.UNTPAL) / SR.UNTPAL)
              ),
              0
            )
            ELSE 0
          END AS SHORT_PL_SUM
        FROM
          #SHORTS SR
      ) AS ST1
  );
SELECT
  SHORTS.WH_ID,
  SHORTS.PRTNUM,
  SHORTS.ITM_DSC,
  SHORTS.CAR_MOVE_ID,
  SHORTS.ORDNUM,
  SHORTS.ORDLIN,
  SHORTS.SHIP_ID,
  SHORTS.SHIP_LINE_ID,
  SHORTS.SHPDTE,
  SHORTS.SHPSTS,
  SHORTS.ALLOC_STS,
  WS.WRKSTS,
  SHP_DST.DSTARE,
  SHP_DST.DSTLOC,
  SHORTS.CS_PER_PL,
  SHORTS.LY_PER_PL,
  SHORTS.CS_PER_LY,
  SHORTS.ORDQTY,
  SHORTS.ORDQTY_CS,
  SHORTS.ORDQTY_LY,
  SHORTS.ORDQTY_PL,
  SHORTS.SHORTQTY,
  SHORTS.SHORTQTY_CS,
  SHORTS.SHORTQTY_LY,
  SHORTS.SHORTQTY_PL,
  SHORTS.LIVE_FLG,
  SHORTS.CARRIER,
  SHORTS.TRLR_NUM,
  SHORTS.CUSTOMER,
  CONVERT(INTEGER, ISNULL(SHORT_SUMMARY.SHORT_UN_SUM, 0)) AS SHORT_UN_SUM,
  CONVERT(INTEGER, ISNULL(SHORT_SUMMARY.SHORT_CS_SUM, 0)) AS SHORT_CS_SUM,
  CONVERT(INTEGER, ISNULL(SHORT_SUMMARY.SHORT_LY_SUM, 0)) AS SHORT_LY_SUM,
  CONVERT(INTEGER, ISNULL(SHORT_SUMMARY.SHORT_PL_SUM, 0)) AS SHORT_PL_SUM,
  CASE
    WHEN ISNULL(SHORT_SUMMARY.SHORT_UN_SUM, 0) > 0 THEN SHORT_SUMMARY.SHORT_UN_SUM
    WHEN ISNULL(SHORT_SUMMARY.SHORT_CS_SUM, 0) > 0 THEN (SHORT_SUMMARY.SHORT_CS_SUM * SHORTS.UNTCAS)
    WHEN ISNULL(SHORT_SUMMARY.SHORT_LY_SUM, 0) > 0 THEN (SHORT_SUMMARY.SHORT_LY_SUM * SHORTS.UNTINP)
    WHEN ISNULL(SHORT_SUMMARY.SHORT_PL_SUM, 0) > 0 THEN (SHORT_SUMMARY.SHORT_PL_SUM * SHORTS.UNTPAL)
    ELSE 0
  END AS SHORTQTY_LINE,
  SHORTS.UNTCAS UNTCS,
  SHORTS.UNTINP UNTLY,
  SHORTS.UNTPAL UNTPL,
  CONVERT(DECIMAL, 1) / SHORTS.UNTPAL AS UNT_PLTS,
  SHORTS.UNTVOL AS UNT_VOL,
  SHORTS.UNTWGT AS UNT_WGT,
  PALLETS.TOTAL_PLTS,
  PALLETS.TOTAL_VOL,
  PALLETS.TOTAL_WGT
FROM
  #SHORTS SHORTS
  LEFT JOIN (
    (
      SELECT
        SS.WH_ID,
        SS.PRTNUM,
        SS.CAR_MOVE_ID,
        SS.ORDNUM,
        SS.ORDLIN,
        SS.SHORTQTY,
        SS.SHORT_UN_SUM,
        0 AS SHORT_CS_SUM,
        0 AS SHORT_LY_SUM,
        0 AS SHORT_PL_SUM
      FROM
        #SHORT_SUM SS
      WHERE
        SS.SHORT_UN_SUM > 0
    )
    UNION ALL
    (
      SELECT
        SS.WH_ID,
        SS.PRTNUM,
        SS.CAR_MOVE_ID,
        SS.ORDNUM,
        SS.ORDLIN,
        SS.SHORTQTY,
        0 AS SHORT_UN_SUM,
        SS.SHORT_CS_SUM,
        0 AS SHORT_LY_SUM,
        0 AS SHORT_PL_SUM
      FROM
        #SHORT_SUM SS
      WHERE
        SS.SHORT_CS_SUM > 0
    )
    UNION ALL
    (
      SELECT
        SS.WH_ID,
        SS.PRTNUM,
        SS.CAR_MOVE_ID,
        SS.ORDNUM,
        SS.ORDLIN,
        SS.SHORTQTY,
        0 AS SHORT_UN_SUM,
        0 AS SHORT_CS_SUM,
        SS.SHORT_LY_SUM,
        0 AS SHORT_PL_SUM
      FROM
        #SHORT_SUM SS
      WHERE
        SS.SHORT_LY_SUM > 0
    )
    UNION ALL
    (
      SELECT
        SS.WH_ID,
        SS.PRTNUM,
        SS.CAR_MOVE_ID,
        SS.ORDNUM,
        SS.ORDLIN,
        SS.SHORTQTY,
        0 AS SHORT_UN_SUM,
        0 AS SHORT_CS_SUM,
        0 AS SHORT_LY_SUM,
        SS.SHORT_PL_SUM
      FROM
        #SHORT_SUM SS
      WHERE
        SS.SHORT_PL_SUM > 0
    )
  ) AS SHORT_SUMMARY ON SHORTS.WH_ID = SHORT_SUMMARY.WH_ID
  AND SHORTS.ORDNUM = SHORT_SUMMARY.ORDNUM
  AND SHORTS.ORDLIN = SHORT_SUMMARY.ORDLIN
  LEFT JOIN #SHPDST SHP_DST ON SHORTS.SHIP_ID = SHP_DST.SHIP_ID
  AND SHORTS.WH_ID = SHP_DST.WH_ID
  LEFT JOIN #TRAILER_PALLETS PALLETS ON SHORTS.WH_ID = PALLETS.WH_ID
  AND SHORTS.CAR_MOVE_ID = PALLETS.CAR_MOVE_ID
  LEFT JOIN #WRKSTS WS ON SHORTS.WH_ID = WS.WH_ID
  AND SHORTS.ORDNUM = WS.ORDNUM
  AND SHORTS.ORDLIN = WS.ORDLIN
ORDER BY
  SHORTS.SHPDTE ASC,
  SHORTS.CAR_MOVE_ID ASC,
  SHORTS.ORDNUM ASC,
  SHORTS.ORDLIN ASC,
  SHORTS.PRTNUM ASC,
  CASE
    WHEN SHORT_SUMMARY.SHORT_PL_SUM > 0 THEN 1
    WHEN SHORT_SUMMARY.SHORT_LY_SUM > 0 THEN 2
    WHEN SHORT_SUMMARY.SHORT_CS_SUM > 0 THEN 3
    ELSE 4
  END ASC OFFSET 0 ROWS IF OBJECT_ID('TEMPDB..#WH_ID') IS NOT NULL DROP TABLE #WH_ID IF OBJECT_ID('TEMPDB..#EARLY_LATE') IS NOT NULL DROP TABLE #EARLY_LATE IF OBJECT_ID('TEMPDB..#PRTFTP') IS NOT NULL DROP TABLE #PRTFTP IF OBJECT_ID('TEMPDB..#SHORTS') IS NOT NULL DROP TABLE #SHORTS IF OBJECT_ID('TEMPDB..#SHORT_PARTS') IS NOT NULL DROP TABLE #SHORT_PARTS IF OBJECT_ID('TEMPDB..#SHORT_CM') IS NOT NULL DROP TABLE #SHORT_CM IF OBJECT_ID('TEMPDB..#SHORT_ORDERS') IS NOT NULL DROP TABLE #SHORT_ORDERS IF OBJECT_ID('TEMPDB..#SHORT_SHIP') IS NOT NULL DROP TABLE #SHORT_SHIP IF OBJECT_ID('TEMPDB..#WRKQUE') IS NOT NULL DROP TABLE #WRKQUE IF OBJECT_ID('TEMPDB..#PCKWRK') IS NOT NULL DROP TABLE #PCKWRK IF OBJECT_ID('TEMPDB..#WRKSTS') IS NOT NULL DROP TABLE #WRKSTS IF OBJECT_ID('TEMPDB..#SHPDST') IS NOT NULL DROP TABLE #SHPDST IF OBJECT_ID('TEMPDB..#TRAILER_PALLETS') IS NOT NULL DROP TABLE #TRAILER_PALLETS IF OBJECT_ID('TEMPDB..#SHORT_SUM') IS NOT NULL DROP TABLE #SHORT_SUM
